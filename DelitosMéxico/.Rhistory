class(model2$classifier)
model2$classifier@jobjRef
model2$classifier@rJava
model2$classifier@package
print(model2$classifier)
sprint("%s", model2$classifier)
sprintf("%s", model2$classifier)
sprintf("%", model2$classifier)
sprintf("%s", model2$classifier, c(1))
model2$classifier
m <- model2$classifier
View(str)
str(model2$classifier)
value(model2$classifier)
.jmethods(model2$classifier)
library(rJava)
.jmethods(model2$classifier)
.jfields(model2$classifier)
.jconstructors(model2$classifier)
.jmethods(model2$classifier)
.jmethods(model2$classifier)
.jcall(model2$classifier, method = "public java.lang.String weka.classifiers.trees.J48.toString()")
.jcall(model2$classifier, method = "public java.lang.String weka.classifiers.trees.J48.toString")
.jcall(model2$classifier, method = "java.lang.String weka.classifiers.trees.J48.toString()")
.jcall(model2$classifier, method = "java.lang.String weka.classifiers.trees.J48.toString")
.jcall(model2$classifier, method = "toString")
.jcall(model2$classifier, "java.lang.String;", method = "toString")
.jcall(model2$classifier, "java.lang.String;", method = "weka.classifiers.trees.toString")
model2$classifier
model2$classifier$toString()
model2$classifier$toString()
m <- model2$classifier$toString()
str(m, "\n")
strsplit(m, "\n")
strsplit(m, c("\n",":"))
strsplit(m, c("\n",":"))
str_split(m, "\n")
strsplit(m, "\n")
strsplit(m, [ !]+)
strsplit(m, "[ !]+")
strsplit(m, "[:!]+")
strsplit(m, "[:!|]+")
strsplit(m, "[:!|\n]+")
strsplit(m, "[:!|\n\t]+")
m <- strsplit(m, "[:!|\n\t]+")
replace(m, " ")
replace(" ", m)
gsub(" ", m)
sub(" ", "", m)
as.list(sub(" ", "", m))
as.vector(sub(" ", "", m))
c(sub(" ", "", m))
sub(" ", "", m)
sub(" ", "", m)[1]
sub(" ", "", m)[[1]
]
library(stringr)
m <- str_split(m, "[:!|\n\t]+")
m <- strsplit(m, "[:!|\n\t]+")
str_replace(m, " ", "")
m <- strsplit(m, "[:!|\n\t]+")
m <- model2$classifier$toString()
m <- strsplit(m, "[:!|\n\t]+")
m
str_replace(m, " ", "")
str_replace(m, " ", "")
">" %in% m
m
any(m %like% ">")
grepl(">", m)
grepl(">|", m)
str_detect(m,">|")
str_detect(m,">|<=")
str_detect(m,">")
mapply('%in%', '>', b)
mapply('%in%', '>', m)
mapply('%in%', m, '>')
mapply('%in%', m, '>|')
mapply(grepl, m, '>')
mapply(grepl, '>', m)
mapply(grepl, '>', m) & mapply(mapply(grepl, '<=', m))
m
mapply(grepl, '>', m) &
mapply(mapply(grepl, '<=', m))
mapply(mapply(grepl, '<=', m))
mapply(grepl, '<=', m)
mapply(grepl, '>', m) & mapply(grepl, '<=', m)
mapply(grepl, '>', m) | mapply(grepl, '<=', m)
m[mapply(grepl, '>', m) | mapply(grepl, '<=', m)]
m <- strsplit(m, "[:!|\n\t]+")
model2 <- J48(Species ~ ., data = iris)
m <- model2$classifier$toString()
m <- strsplit(m, "[:!|\n\t]+")
m
[mapply(grepl, '>', m) | mapply(grepl, '<=', m)
mapply(grepl, '>', m) | mapply(grepl, '<=', m)
m[mapply(grepl, '>', m) | mapply(grepl, '<=', m)]
m[c(1)]
m
model2 <- J48(Species ~ ., data = iris)
m <- model2$classifier$toString()
m <- strsplit(m, "[:!|\n\t]+")
m
m <- strsplit(m, "[:!|\n\t]+")[[1]]
model2 <- J48(Species ~ ., data = iris)
m <- model2$classifier$toString()
m <- strsplit(m, "[:!|\n\t]+")[[1]]
m
m[mapply(grepl, '>', m) | mapply(grepl, '<=', m)]
model2 <- J48(Species ~ ., data = iris)
m <- model2$classifier$toString()
m <- strsplit(m, "[:!\n\t]+")[[1]]
m <- m[mapply(grepl, '>', m) | mapply(grepl, '<=', m)]
m
model2 <- J48(Species ~ ., data = iris)
m <- model2$classifier$toString()
m <- strsplit(m, "[:!|\n\t]+")[[1]]
m <- m[mapply(grepl, '>', m) | mapply(grepl, '<=', m)]
m
mapply(gsub, m, " ", "")
mapply(gsub, m, "", " ")
mapply(sub, m, " ", "")
mapply(sub, m, " ", "")[1]
mapply(sub, m, " ", "")[[1]]
sub(m, " ", "")
sub(" ", "", m)
gsub(" ", "", m)
gsub("[ <>=]+", "", m)
gsub("[<>=]+", "", m)
gsub("[ =]+", "", m)
m <- gsub("[ =]+", "", m)
strsplit(m,"[<>]+")
summary(model)
data.frame(strsplit(m,"[<>]+"))
data.frame(matrix(unlist(strsplit(m,"[<>]+"))))
data.frame(matrix(unlist(strsplit(m,"[<>]+"))), nrow = 2)
data.frame(matrix(unlist(strsplit(m,"[<>]+")), nrow = 2))
data.frame(matrix(unlist(strsplit(m,"[<>]+")), ncol = 2))
data.frame(matrix(unlist(strsplit(m,"[<>]+")), nrow = 2))
help("data.frame")
data.frame(t(matrix(unlist(strsplit(m,"[<>]+")), nrow = 2)))
m <- strsplit(m,"[<>]+")
m <- data.frame(t(matrix(unlist(m), nrow = 2)))
m
model2 <- J48(Species ~ ., data = iris)
m <- model2$classifier$toString()
m <- strsplit(m, "[:!|\n\t]+")[[1]]
m <- m[mapply(grepl, '>', m) | mapply(grepl, '<=', m)]
m <- gsub("[ =]+", "", m)
m
m <- strsplit(m,"[<>]+")
m
m <- data.frame(t(matrix(unlist(m), nrow = 2)))
m
library(dplyr)
m %>% group_by(X1)
m %>% group_by(X1) %>% summarise()
m %>% group_by(X1) %>% summarise(list(X2))
n <- m %>% group_by(X1) %>% summarise(list(X2))
n
View(n)
n <- m %>% group_by(X1) %>% summarise(X2= unique(list(X2)))
n <- m %>% group_by(X1) %>% summarise(X2 = list(unique(X2)))
model2
plot(model2)
m <- m %>% group_by(X1) %>% summarise(X2 = list(unique(X2)))
m
dlply(m,1,c)
matrix(m)
matrix(unlist(m))
unlist(m)
list(m)
rapply(m,as.list,how="list")
print(rapply(m,as.list,how="list"))
print(rapply(m,as.list,how="list"))[[2]]
m
file.exists("~/.ssh/id_rsa.pub")
library(dplyr)
library(stringi)
library(ggplot2)
library(svglite)
library(reshape2)
library(MetBrewer)
library(patchwork)
windowsFonts(PT=windowsFont("PT Sans"))
setwd("D:/ProyectosRandom/DelitosMéxico")
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS"
& datos17$TIPO == "CULPOSOS"] <- "Homicidios culposos"
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS" &
datos17$TIPO == "DOLOSOS"] <- "Homicidios dolosos"
datos17 <- datos17 %>% filter(MODALIDAD == "Homicidios culposos" | MODALIDAD == "Homicidios dolosos")
datos17 <- datos17 %>% select(AÑO, ENTIDAD, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "ENTIDAD", "MODALIDAD"), value.name = "Valor", variable.name = "Mes") %>%
group_by(AÑO, ENTIDAD, MODALIDAD) %>% summarise(Valor = sum(Valor)) %>% as.data.frame()
datos17$MODALIDAD <- factor(datos17$MODALIDAD, c("Homicidios culposos", "Homicidios dolosos"))
datos22 <- read.csv("IDEFC_NM_feb22.csv") %>% filter(Año >= 2016)
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio culposo"] <- "Homicidios culposos"
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio doloso"] <- "Homicidios dolosos"
datos22 <- datos22 %>% filter(Tipo.de.delito == "Homicidios culposos" | Tipo.de.delito == "Homicidios dolosos")
datos22 <- datos22 %>% select(Año, Entidad, Tipo.de.delito, Enero, Febrero, Marzo, Abril, Mayo,
Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre) %>%
melt(c("Año", "Entidad", "Tipo.de.delito"), value.name = "Valor", variable.name = "Mes" )%>%
group_by(Año, Entidad, Tipo.de.delito) %>% summarise(Valor = sum(Valor)) %>% na.omit() %>% as.data.frame()
names(datos22)[names(datos22) == "Tipo.de.delito"] <- "Delito"
names(datos17) <- names(datos22)
datos17$Entidad <- stri_replace_all_regex(datos17$Entidad,
pattern = c("BAJA CALIFORNIA SUR"),
replacement = c("BS"),
vectorize = F)
datos22$Entidad <- stri_replace_all_regex(datos22$Entidad,
pattern = c("Baja California Sur"),
replacement = c("BS"),
vectorize = F)
datos17$Entidad2 <- stri_replace_all_regex(datos17$Entidad,
pattern = sort(unique(datos17$Entidad)),
replacement = c("AG", "BC", "BS", "CM", "CS", "CH", "CX", "CO",
"CL", "DG", "GT", "GR", "HG", "JC", "EM", "MI",
"MO", "NY", "NL", "OA", "PU", "QT", "QR", "SL",
"SI", "SO", "TB", "TM", "TL", "VE", "YU", "ZA"),
vectorize = F)
datos22$Entidad2 <- stri_replace_all_regex(datos22$Entidad,
pattern = sort(unique(datos22$Entidad)),
replacement = c("AG", "BC", "BS", "CM", "CS", "CH", "CX", "CO",
"CL", "DG", "GT", "GR", "HG", "JC", "EM", "MI",
"MO", "NY", "NL", "OA", "PU", "QT", "QR", "SL",
"SI", "SO", "TB", "TM", "TL", "VE", "YU", "ZA"),
vectorize = F)
datos <- rbind(datos17, datos22)
posiciones <- read.csv("Entidades.csv")
datos2 <- datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/3), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = "")) %>%
as.data.frame() %>%  inner_join(posiciones, by = "Entidad2")
View(datos2)
library(dplyr)
library(stringi)
library(ggplot2)
library(svglite)
library(svglite)
library(reshape2)
library(MetBrewer)
windowsFonts(PT=windowsFont("PT Sans"))
setwd("D:/ProyectosRandom/DelitosMéxico")
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
windowsFonts(PT=windowsFont("PT Sans"))
setwd("D:/ProyectosRandom/DelitosMéxico")
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS"
& datos17$TIPO == "CULPOSOS"] <- "Homicidios culposos"
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS" &
datos17$TIPO == "DOLOSOS"] <- "Homicidios dolosos"
datos17 <- datos17 %>% filter(MODALIDAD == "Homicidios culposos" | MODALIDAD == "Homicidios dolosos")
datos17 <- datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes") %>%
group_by(AÑO, MODALIDAD) %>% summarise(Valor = sum(Valor)) %>% as.data.frame()
datos17$MODALIDAD <- factor(datos17$MODALIDAD, c("Homicidios culposos", "Homicidios dolosos"))
datos22 <- read.csv("IDEFC_NM_feb22.csv") %>% filter(Año >= 2016)
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio culposo"] <- "Homicidios culposos"
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio doloso"] <- "Homicidios dolosos"
datos22 <- datos22 %>% filter(Tipo.de.delito == "Homicidios culposos" | Tipo.de.delito == "Homicidios dolosos")
datos22 <- datos22 %>% select(Año, Tipo.de.delito, Enero, Febrero, Marzo, Abril, Mayo,
Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre) %>%
melt(c("Año", "Tipo.de.delito"), value.name = "Valor", variable.name = "Mes" )%>%
group_by(Año, Tipo.de.delito) %>% summarise(Valor = sum(Valor)) %>% na.omit() %>% as.data.frame()
names(datos22)[names(datos22) == "Tipo.de.delito"] <- "Delito"
names(datos17) <- names(datos22)
datos <- rbind(datos17, datos22)
View(datos)
datos %>% group_by(x = ceiling(row_number()/2), Delito) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"\n", max(Año), sep = ""))
datos %>% group_by(x = ceiling(row_number()/2), Delito)
datos %>% group_by(x = ceiling(row_number()/2), Delito) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"\n", max(Año), sep = ""))
datos %>% group_by(x = ceiling(row_number()/2), Delito) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"\n", max(Año), sep = "")) %>% ggplot() +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 0, yend = 0), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 20000, yend = 20000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 40000, yend = 40000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 60000, yend = 60000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 80000, yend = 80000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 100000, yend = 100000), color = "#f5f5f5") +
geom_vline(aes(xintercept = c("1998\n2000")), color = "#ededed") + geom_vline(aes(xintercept = "2001\n2003"), color = "#ededed") +
geom_vline(aes(xintercept = "2004\n2006"), color = "#ededed") + geom_vline(aes(xintercept = "2007\n2009"), color = "#ededed") +
geom_vline(aes(xintercept = "2010\n2012"), color = "#ededed") + geom_vline(aes(xintercept = "2013\n2015"), color = "#ededed") +
geom_vline(aes(xintercept = "2016\n2018"), color = "#ededed") + geom_vline(aes(xintercept = "2019\n2021"), color = "#ededed") +
scale_y_continuous(limits = c(0,100000), breaks = c(0, 20000, 40000, 60000, 80000, 100000),
labels = c("0", "20K", "40K", "60K", "80K", "100K")) +
scale_x_discrete(expand = expansion(0, 0.1), position = "bottom") +
geom_line(aes(x = Periodo, y = Valor, group = Delito, color = Delito), size = 0.75) +
geom_point(aes(x = Periodo, y = Valor, color = Delito), size = 3) +
geom_text(aes(x = Periodo, y = Valor, label = Valor)) +
scale_color_manual(values = met.brewer("Hokusai1", 5)[c(4,2)]) +
theme(panel.background = element_blank(), axis.title = element_blank(), legend.position = "none",
axis.ticks = element_blank(), axis.text = element_text(family = "PT"),
panel.grid = element_blank())
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS"
& datos17$TIPO == "CULPOSOS"] <- "Homicidios culposos"
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS" &
datos17$TIPO == "DOLOSOS"] <- "Homicidios dolosos"
datos17 <- datos17 %>% filter(MODALIDAD == "Homicidios culposos" | MODALIDAD == "Homicidios dolosos")
datos17 <- datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes") %>%
group_by(AÑO, MODALIDAD) %>% summarise(Valor = sum(Valor)) %>% as.data.frame()
View(datos17)
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS"
& datos17$TIPO == "CULPOSOS"] <- "Homicidios culposos"
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS" &
datos17$TIPO == "DOLOSOS"] <- "Homicidios dolosos"
datos17 <- datos17 %>% filter(MODALIDAD == "Homicidios culposos" | MODALIDAD == "Homicidios dolosos")
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes")
datos17
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes")
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes")
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)
datos17
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS"
& datos17$TIPO == "CULPOSOS"] <- "Homicidios culposos"
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS" &
datos17$TIPO == "DOLOSOS"] <- "Homicidios dolosos"
datos17 <- datos17 %>% filter(MODALIDAD == "Homicidios culposos" | MODALIDAD == "Homicidios dolosos")
datos17
datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes")
datos17 <- datos17 %>% select(AÑO, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "MODALIDAD"), value.name = "Valor", variable.name = "Mes") %>%
group_by(AÑO, MODALIDAD) %>% summarise(Valor = sum(Valor)) %>% as.data.frame()
View(datos17)
datos17$MODALIDAD <- factor(datos17$MODALIDAD, c("Homicidios culposos", "Homicidios dolosos"))
datos22 <- read.csv("IDEFC_NM_feb22.csv") %>% filter(Año >= 2016)
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio culposo"] <- "Homicidios culposos"
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio doloso"] <- "Homicidios dolosos"
datos22 <- datos22 %>% filter(Tipo.de.delito == "Homicidios culposos" | Tipo.de.delito == "Homicidios dolosos")
View(datos22)
datos22 <- datos22 %>% select(Año, Tipo.de.delito, Enero, Febrero, Marzo, Abril, Mayo,
Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre) %>%
melt(c("Año", "Tipo.de.delito"), value.name = "Valor", variable.name = "Mes" )%>%
group_by(Año, Tipo.de.delito) %>% summarise(Valor = sum(Valor)) %>% na.omit() %>% as.data.frame()
names(datos22)[names(datos22) == "Tipo.de.delito"] <- "Delito"
names(datos17) <- names(datos22)
datos <- rbind(datos17, datos22)
datos %>% group_by(x = ceiling(row_number()/6), Delito) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"\n", max(Año), sep = "")) %>% ggplot() +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 0, yend = 0), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 20000, yend = 20000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 40000, yend = 40000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 60000, yend = 60000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 80000, yend = 80000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 100000, yend = 100000), color = "#f5f5f5") +
geom_vline(aes(xintercept = c("1998\n2000")), color = "#ededed") + geom_vline(aes(xintercept = "2001\n2003"), color = "#ededed") +
geom_vline(aes(xintercept = "2004\n2006"), color = "#ededed") + geom_vline(aes(xintercept = "2007\n2009"), color = "#ededed") +
geom_vline(aes(xintercept = "2010\n2012"), color = "#ededed") + geom_vline(aes(xintercept = "2013\n2015"), color = "#ededed") +
geom_vline(aes(xintercept = "2016\n2018"), color = "#ededed") + geom_vline(aes(xintercept = "2019\n2021"), color = "#ededed") +
scale_y_continuous(limits = c(0,100000), breaks = c(0, 20000, 40000, 60000, 80000, 100000),
labels = c("0", "20K", "40K", "60K", "80K", "100K")) +
scale_x_discrete(expand = expansion(0, 0.1), position = "bottom") +
geom_line(aes(x = Periodo, y = Valor, group = Delito, color = Delito), size = 0.75) +
geom_point(aes(x = Periodo, y = Valor, color = Delito), size = 3) +
geom_text(aes(x = Periodo, y = Valor, label = Valor)) +
scale_color_manual(values = met.brewer("Hokusai1", 5)[c(4,2)]) +
theme(panel.background = element_blank(), axis.title = element_blank(), legend.position = "none",
axis.ticks = element_blank(), axis.text = element_text(family = "PT"),
panel.grid = element_blank())
datos %>% group_by(x = ceiling(row_number()/2), Delito) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"\n", max(Año), sep = "")) %>% ggplot() +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 0, yend = 0), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 20000, yend = 20000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 40000, yend = 40000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 60000, yend = 60000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 80000, yend = 80000), color = "#f5f5f5") +
geom_segment(aes(x = "1998\n2000", xend = "2019\n2021", y = 100000, yend = 100000), color = "#f5f5f5") +
geom_vline(aes(xintercept = c("1998\n2000")), color = "#ededed") + geom_vline(aes(xintercept = "2001\n2003"), color = "#ededed") +
geom_vline(aes(xintercept = "2004\n2006"), color = "#ededed") + geom_vline(aes(xintercept = "2007\n2009"), color = "#ededed") +
geom_vline(aes(xintercept = "2010\n2012"), color = "#ededed") + geom_vline(aes(xintercept = "2013\n2015"), color = "#ededed") +
geom_vline(aes(xintercept = "2016\n2018"), color = "#ededed") + geom_vline(aes(xintercept = "2019\n2021"), color = "#ededed") +
scale_y_continuous(limits = c(0,100000), breaks = c(0, 20000, 40000, 60000, 80000, 100000),
labels = c("0", "20K", "40K", "60K", "80K", "100K")) +
scale_x_discrete(expand = expansion(0, 0.1), position = "bottom") +
geom_line(aes(x = Periodo, y = Valor, group = Delito, color = Delito), size = 0.75) +
geom_point(aes(x = Periodo, y = Valor, color = Delito), size = 3) +
geom_text(aes(x = Periodo, y = Valor, label = Valor)) +
scale_color_manual(values = met.brewer("Hokusai1", 5)[c(4,2)]) +
theme(panel.background = element_blank(), axis.title = element_blank(), legend.position = "none",
axis.ticks = element_blank(), axis.text = element_text(family = "PT"),
panel.grid = element_blank())
library(dplyr)
library(stringi)
library(ggplot2)
library(svglite)
library(reshape2)
library(MetBrewer)
library(patchwork)
windowsFonts(PT=windowsFont("PT Sans"))
setwd("D:/ProyectosRandom/DelitosMéxico")
datos17 <- read.csv("IDEFC_jun2021.csv") %>% filter(AÑO >= 1998 &AÑO <= 2015)
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS"
& datos17$TIPO == "CULPOSOS"] <- "Homicidios culposos"
datos17$MODALIDAD[datos17$MODALIDAD == "HOMICIDIOS" &
datos17$TIPO == "DOLOSOS"] <- "Homicidios dolosos"
datos17 <- datos17 %>% filter(MODALIDAD == "Homicidios culposos" | MODALIDAD == "Homicidios dolosos")
datos17 %>% select(AÑO, ENTIDAD, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)
datos17 %>% select(AÑO, ENTIDAD, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "ENTIDAD", "MODALIDAD"), value.name = "Valor", variable.name = "Mes")
datos17 %>% select(AÑO, ENTIDAD, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "ENTIDAD", "MODALIDAD"), value.name = "Valor", variable.name = "Mes") %>%
group_by(AÑO, ENTIDAD, MODALIDAD) %>% summarise(Valor = sum(Valor))
datos17 <- datos17 %>% select(AÑO, ENTIDAD, MODALIDAD, ENERO, FEBRERO, MARZO, ABRIL, MAYO, JUNIO,
JULIO, AGOSTO, SEPTIEMBRE, OCTUBRE, NOVIEMBRE, DICIEMBRE)  %>%
melt(c("AÑO", "ENTIDAD", "MODALIDAD"), value.name = "Valor", variable.name = "Mes") %>%
group_by(AÑO, ENTIDAD, MODALIDAD) %>% summarise(Valor = sum(Valor)) %>% as.data.frame()
datos17$MODALIDAD <- factor(datos17$MODALIDAD, c("Homicidios culposos", "Homicidios dolosos"))
datos22 <- read.csv("IDEFC_NM_feb22.csv") %>% filter(Año >= 2016)
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio culposo"] <- "Homicidios culposos"
datos22$Tipo.de.delito[datos22$Subtipo.de.delito == "Homicidio doloso"] <- "Homicidios dolosos"
datos22 <- datos22 %>% filter(Tipo.de.delito == "Homicidios culposos" | Tipo.de.delito == "Homicidios dolosos")
datos22 <- datos22 %>% select(Año, Entidad, Tipo.de.delito, Enero, Febrero, Marzo, Abril, Mayo,
Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre) %>%
melt(c("Año", "Entidad", "Tipo.de.delito"), value.name = "Valor", variable.name = "Mes" )%>%
group_by(Año, Entidad, Tipo.de.delito) %>% summarise(Valor = sum(Valor)) %>% na.omit() %>% as.data.frame()
names(datos22)[names(datos22) == "Tipo.de.delito"] <- "Delito"
names(datos17) <- names(datos22)
datos17$Entidad <- stri_replace_all_regex(datos17$Entidad,
pattern = c("BAJA CALIFORNIA SUR"),
replacement = c("BS"),
vectorize = F)
datos22$Entidad <- stri_replace_all_regex(datos22$Entidad,
pattern = c("Baja California Sur"),
replacement = c("BS"),
vectorize = F)
datos17$Entidad2 <- stri_replace_all_regex(datos17$Entidad,
pattern = sort(unique(datos17$Entidad)),
replacement = c("AG", "BC", "BS", "CM", "CS", "CH", "CX", "CO",
"CL", "DG", "GT", "GR", "HG", "JC", "EM", "MI",
"MO", "NY", "NL", "OA", "PU", "QT", "QR", "SL",
"SI", "SO", "TB", "TM", "TL", "VE", "YU", "ZA"),
vectorize = F)
datos22$Entidad2 <- stri_replace_all_regex(datos22$Entidad,
pattern = sort(unique(datos22$Entidad)),
replacement = c("AG", "BC", "BS", "CM", "CS", "CH", "CX", "CO",
"CL", "DG", "GT", "GR", "HG", "JC", "EM", "MI",
"MO", "NY", "NL", "OA", "PU", "QT", "QR", "SL",
"SI", "SO", "TB", "TM", "TL", "VE", "YU", "ZA"),
vectorize = F)
datos17
datos <- rbind(datos17, datos22)
posiciones <- read.csv("Entidades.csv")
datos2 <- datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/3), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = "")) %>%
as.data.frame() %>%  inner_join(posiciones, by = "Entidad2")
View(datos)
datos2 <- datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/3), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = "")) %>%
as.data.frame() %>%  inner_join(posiciones, by = "Entidad2")
datos2 <- datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/2), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = "")) %>%
as.data.frame() %>%  inner_join(posiciones, by = "Entidad2")
datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2)
datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/2), Entidad2)
datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/2), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = ""))
datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/2), Entidad2)
datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/2), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = ""))
datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/3), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = ""))
datos2 <- datos %>% group_by(Año, Entidad2) %>% summarise(Valor = sum(Valor)) %>%
arrange(Entidad2) %>% group_by(i = ceiling(row_number()/3), Entidad2) %>%
summarise(Valor = sum(Valor), Periodo = paste(min(Año),"/", max(Año), sep = "")) %>%
as.data.frame() %>%  inner_join(posiciones, by = "Entidad2")
entidades <- unique(datos$Entidad2)
datos2 %>% ggplot(aes(x = XE, y = YE, fill = Valor)) +
geom_tile(aes(width = 0.9, height = 0.9))  +
scale_fill_gradientn(colors = met.brewer("Hokusai1", 5)[4:1], limits = c(0, 20000)) +
geom_text(aes(x= XE, y = YE, label = Entidad2), color = "#ffffff", family = "PT", size = 3.5) +
#geom_text(aes(x= XE, y = YE-0.2, label = Valor), color = "#ffffff", family = "PT") +
theme(panel.background =  element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank(),
plot.margin=grid::unit(c(0,0,0,0), "mm"), panel.grid = element_blank()) +
facet_wrap(.~Periodo)
View(datos17)
View(datos22)
